.\" Copyright (c) 2005 Stijn van Dongen
.TH "clmmate" 1 "28 Apr 2005" "clmmate 1\&.005, 05-118" "USER COMMANDS"
.po 2m
.de ZI
.\" Zoem Indent/Itemize macro I.
.br
'in +\\$1
.nr xa 0
.nr xa -\\$1
.nr xb \\$1
.nr xb -\\w'\\$2'
\h'|\\n(xau'\\$2\h'\\n(xbu'\\
..
.de ZJ
.br
.\" Zoem Indent/Itemize macro II.
'in +\\$1
'in +\\$2
.nr xa 0
.nr xa -\\$2
.nr xa -\\w'\\$3'
.nr xb \\$2
\h'|\\n(xau'\\$3\h'\\n(xbu'\\
..
.if n .ll -2m
.am SH
.ie n .in 4m
.el .in 8m
..
.SH NAME
clmmate \- compute best matches between two clusterings
.SH SYNOPSIS

\fBclmmate\fP [-twins fname] <clfile1> <clfile2>
.SH DESCRIPTION

\fBclmmate\fP computes for each cluster \fCC1\fR in \fCclfile1\fR all clusters
\fCC2\fR in \fCclfile2\fR that have non-empty intersection, and prints
the number of shared nodes, the numbers of nodes in \fCC1\fR absent
in \fCC2\fR, the number of nodes in \fCC2\fR absent in \fCC1\fR, and
the total number of nodes in \fCC2\fR\&. The total number of nodes
in \fCC1\fR is listed once for each sublisting, where the primary
listing is over clusters in \fCclfile1\fR\&.

All of this information can also be obtained from the
contingency matrix defined for two clusterings\&.
The \fC[i,j]\fR row-column entry in a contigency matrix between
to clusterings gives the number of entries in the intersection
between cluster\ \fCi\fR and cluster\ \fCj\fR from the respective
clusterings\&. The other information is implicitly present;
the total number of nodes in clusters\ \fCi\fR and\ \fCj\fR
for example can be obtained as the sum of entries in row\ \fCi\fR
and column\ \fCj\fR respectively, and the difference counts
can then be obtained by substracting the intersection count\&.
The contingency matrix can easily be computed using \fBmcx\fP;
e\&.g\&.

.di ZV
.in 0
.nf \fC

mcx /clfile2 lm /clfile1 lm tp mul /ting wm
.fi \fR
.in
.di
.ne \n(dnu
.nf \fC
.ZV
.fi \fR

will create the contingency matrix in mcl matrix format
in the file \fCting\fR, where columns range over the clusters
in \fCclfile1\fR\&.

\fBclmmate\fP has the advantage that information is presented
in a more comprehensible fashion than available from
the contingency matrix\&.
Additionally, the \fB-twins\fP\ \fItwinfile\fP option is useful
to inspect the list of best matching clusters from \fCclfile2\fR\&.
This option will create a file \fCtwinfile\fR which contains
cryptic (but useful) lines of the form

.di ZV
.in 0
.nf \fC
0\&.645           0,2         194    214      0
0\&.004           0,3           1    407    128
0\&.211           0,38         48    360      0
0\&.203           0,40         46    362      0
0\&.154           0,56         34    374      0
0\&.145           0,63         32    376      0
.fi \fR
.in
.di
.ne \n(dnu
.nf \fC
.ZV
.fi \fR

The first line indicates that clusters\ 0 from \fCclfile1\fR
and\ 2 from \fCclfile2\fR have 194\ nodes in their
intersection; there are 214\ additional nodes in cluster\ 0,
and 0\ additional nodes in cluster\ 2\&.
Denote the size of the intersection (also called meet) by\ \fCm\fR,
and the sizes of the two clusters as \fCs1\fR\ and\ \fCs2\fR respectively\&.
The scores beginning each line are
computed as \fC2*m/(s1+s2)\fR\&. Such a score equals
exactly 1\&.0 if the two clusters are identical, and for nearly identical
clusterings the score will be close to 1\&.0\&.

The twin file can be put to good use by sorting it numerically on
that first score field\&. It is advisable to use a stable sort routine
(use the \fB-s\fP option for UNIX sort)
An example result is the following\&.

.di ZV
.in 0
.nf \fC
1\&.000           4,1         253      0      0
1\&.000          17,7         119      0      0
1\&.000          20,10         94      0      0
1\&.000          26,17         71      0      0
1\&.000          28,18         69      0      0
1\&.000          30,20         66      0      0
1\&.000          38,27         55      0      0
1\&.000          41,29         53      0      0
1\&.000          51,41         44      0      0
1\&.000          64,51         35      0      0
1\&.000          69,62         32      0      0
1\&.000          71,61         32      0      0
1\&.000          74,70         30      0      0
1\&.000          76,73         28      0      0
1\&.000          80,76         27      0      0
.fi \fR
.in
.di
.ne \n(dnu
.nf \fC
.ZV
.fi \fR

From this information one can quickly extract the closest
clusters between two clusterings\&.
.SH AUTHOR

Stijn van Dongen\&.
.SH SEE ALSO

\fBmclfamily(7)\fP for an overview of all the documentation
and the utilities in the mcl family\&.
