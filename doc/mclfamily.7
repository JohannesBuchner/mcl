.\" Copyright (c) 2009 Stijn van Dongen
.TH "mcl" 7 "18 Sep 2009" "mcl 1\&.008, 09-261" "MISCELLANEOUS "
.po 2m
.de ZI
.\" Zoem Indent/Itemize macro I.
.br
'in +\\$1
.nr xa 0
.nr xa -\\$1
.nr xb \\$1
.nr xb -\\w'\\$2'
\h'|\\n(xau'\\$2\h'\\n(xbu'\\
..
.de ZJ
.br
.\" Zoem Indent/Itemize macro II.
'in +\\$1
'in +\\$2
.nr xa 0
.nr xa -\\$2
.nr xa -\\w'\\$3'
.nr xb \\$2
\h'|\\n(xau'\\$3\h'\\n(xbu'\\
..
.if n .ll -2m
.am SH
.ie n .in 4m
.el .in 8m
..
.SH NAME
mclfamily \- a description of the mcl family of cluster applications\&.

\fBmcl\fP is an implementation of the Markov Cluster Algorithm, aka MCL algoritm\&.
It is described in the \fBmcl manual\fP\&.
Several other utilities are part of the MCL distribution\&. This manual pages
gives an overview\&.

.ZI 15m "\fBmcl(1)\fP"
the cluster algorithm
.in -15m
.ZI 15m "\fBmclfaq(7)\fP"
MCL Frequently Asked Questions
.in -15m
.ZI 15m "\fBmcxio(5)\fP"
the graph/matrix input/output format
.in -15m
.ZI 15m "\fBmcx(1)\fP"
general graph/matrix tasks
.in -15m
.ZI 15m "\fBmcx convert\fP"
convert between interchange/binary storage types
.in -15m
.ZI 15m "\fBmcx diameter\fP"
compute diameter of a symmetric graph
.in -15m
.ZI 15m "\fBmcx clcf\fP"
compute clustering coefficient
.in -15m
.ZI 15m "\fBmcx ctty\fP"
compute betweenness centrality
.in -15m
.ZI 15m "\fBmcx erdos\fP"
compute shortest paths in graphs
.in -15m
.ZI 15m "\fBmcx q\fP"
compute simple graph statistics
.in -15m
.ZI 15m "\fBmcxassemble(1)\fP"
create matrices from raw data
.in -15m
.ZI 15m "\fBmcxdump(1)\fP"
dump a matrix optionally with label substitions
.in -15m
.ZI 15m "\fBmcxload(1)\fP"
load label data into matrix and tab files
.in -15m
.ZI 15m "\fBmcxarray(1)\fP"
transform array data to MCL matrices
.in -15m
.ZI 15m "\fBmcxmap(1)\fP"
relabel indices in a graph/matrix
.in -15m
.ZI 15m "\fBmcxrand(1)\fP"
randomly remove, add, and perturb edge weights
.in -15m
.ZI 15m "\fBmcxsubs(1)\fP"
extracting submatrices in various ways
.in -15m
.ZI 15m "\fBmcxi(1)\fP"
general matrix operations
.in -15m
.ZI 15m "\fBclm(1)\fP"
general graph-clustering related tasks
.in -15m
.ZI 15m "\fBclm dist\fP"
compute split/join distance between clusterings
.in -15m
.ZI 15m "\fBclm vol\fP"
derive node volatility scores from a set of clusterings
.in -15m
.ZI 15m "\fBclm info\fP"
compute performance measure for clusterings
.in -15m
.ZI 15m "\fBclm meet\fP"
compute intersection of clusterings
.in -15m
.ZI 15m "\fBclm mate\fP"
find best matching clusters between clusterings
.in -15m
.ZI 15m "\fBclm close\fP"
fetch connected components from graphs or subgraphs
.in -15m
.ZI 15m "\fBclm imac\fP"
interpret MCL iterand/matrix as clustering
.in -15m
.ZI 15m "\fBclm residue\fP"
extend subgraph clustering
.in -15m
.ZI 15m "\fBclm order\fP"
reorder indices to represent blocks from different clusterings
.in -15m
.ZI 15m "\fBclmformat(1)\fP"
display clusters as html or txt files
.in -15m
.ZI 15m "\fBmclpipeline(1)\fP"
parsing/assembly/clustering/display
.in -15m
.ZI 15m "\fBmclblastline(1)\fP \fC*\fP"
BLAST pipeline
.in -15m
.ZI 15m "\fBmcxdeblast(1)\fP \fC*\fP"
parse BLAST files
.in -15m

Entries marked \fC*\fP are not available if only a default
install is done\&.
.SH DESCRIPTION

\fBmcl(1)\fP - the clustering program\&. Since the 05-314 release
it has the ability to read in and cluster label input\&.

\fBmclfamily(7)\fP - Frequently Asked Questions\&.

\fBmcxio(5)\fP - a description of the mcl matrix format\&.

\fBmcxassemble(1)\fP - assemble a matrix/graph from partial edge
weight scores\&. Useful intermediate format to be used when transforming
application specific data into an mcl input matrix\&.
However, \fBmcl\fP has now acquired the ability to read graphs directly
from label input, removing the need for \fBmcxassemble\fP in most cases\&.

\fBmcxdump(1)\fP - dump matrices in a line-based format, optionally map
indices to labels\&. Either a node pair (matrix entry) or a node list
(matrix row) is output per line\&.

\fBmcxload(1)\fP - load matrices and tab files
from a line-based ID1 ID2 format\&.
It can load bipartite structures in which the two columns
contain labels from different domains\&. It has many options
to further symmetrize and transform the input\&.

\fBmcxarray(1)\fP - transform array data to MCL matrices\&. The data
may be of rectangular \fCM\ \&x\ \&N\fP type\&. Either an \fCM\ \&x\ \&M\fP
or an \fCN\ \&x\ \&N\fP dimensional matrix can be made, by computing
correlation scores between the vectors in one of the to domains\&.
The Pearson correlation coefficient and the cosine are supported,
and further tearing and pruning options can be applied\&.

\fBmcxmap(1)\fP - relabel indices in a graph\&.

\fBmcxrand(1)\fP - randomly remove, add, and perturb edge weights\&.

\fBmcx convert\fP - convert matrices from interchange mcl format to
binary mcl format or vice versa\&.

\fBmcx diameter\fP - compute the diameter of a graph\&.

\fBmcx clcf\fP - compute the clustering coefficient of a graph\&.

\fBmcxi(1)\fP - an interpreter for a stack language that enables
interaction with the \fBmcl\fP matrix libraries\&. It can be used both from the
command line and interactively, and supports a rich set of operations such
as transposition, scaling, column scaling, multiplication, Hadamard powers
and products, et cetera\&. The general aim is to provide handles for simple
number and matrix arithmetic,
and for graph, set, and clustering operations\&. The following is
a very simple example of implementing and using \fBmcl\fP in this language\&.

.di ZV
.in 0
.nf \fC
 2\&.0 \&.i def                    # define inflation value\&.
 /small lm                     # load matrix in file \&'small\&'\&.
 dim id add                    # add identity matrix\&.
 st \&.x def                     # make stochastic, bind to x\&.
 { xpn \&.i infl vm } \&.mcl def   # define one mcl iteration\&.
 20 \&.x \&.mcl repeat             # iterate  20 times
 imac                          # interpret matrix as clustering\&.
 vm                            # view matrix (clustering)\&.
.fi \fR
.in
.di
.ne \n(dnu
.nf \fC
.ZV
.fi \fR

One of the more interesting things that can be done is doing mcl runs
with more complicated inflation profiles than the two-constant approach used
in \fBmcl\fP itself\&.

\fBmcxsubs(1)\fP - compute a submatrix of a given matrix, where row
and column index sets can be specified as lists of indices combined
with list of clusters in a given clustering\&. Useful for inspecting
local cluster structure\&.

\fBclm dist\fP - compute the split/join distance between two
partitions\&. The split/join distance is better suited for measuring partition
similarity than the long-known equivalence mismatch coefficient\&. The former
measures the number of node moves required to transform one partition into
the other, the latter measures differences between volumes of edges of
unions of complete graphs associated with partitions\&.

\fBclm info\fP - compute a performance measure saying how well
a clustering captures the edge weights of the input graph\&. Useful
for comparing different clusterings on the same graph, best used in
conjunction with \fBclm dist\fP - because comparing clusterings at
different levels of granularity should somewhat change the performance
interpretation\&. The latter issue is discussed in the \fBclm dist\fP
entry\&.

\fBclm meet\fP - compute the intersection of a set of clusterings,
i\&.e\&. the largest clustering that is a subclustering of all\&. Useful
for measuring the consistency of a set of different clusterings
at supposedly different levels of granularity (in conjunction with \fBclm dist\fP)\&.

\fBclm mate\fP - find best matching clusters between two different
clusterings\&.

\fBclm close\fP - fetch connected components from graphs or subgraphs\&.

\fBclm imac\fP - interpret MCL iterands as clusterings\&. The clusterings
associated with early iterands may contain overlap, should you be
interested therein\&.

\fBclm residue\fP - extend a clustering of a subgraph onto a clustering
of the larger graph\&.

\fBclmformat(1)\fP - display clusters suitable for scrutinizing\&.

\fBclm order\fP - reorder indices to represent blocks from
different clusterings\&.

\fBmclpipeline(1)\fP - set up a pipeline from data parsing stage
unto clustering format/display stage\&.

\fBmclblastline(1)\fP - BLAST specific pipeline\&.

\fBmcxdeblast(1)\fP - BLAST parser\&. Can be used to directly stream
a graph into \fBmcl\fP\&. Can also prepare input for mcxassemble
or can be plugged into the heavy-weight mclblastline\&.
